{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Копия блокнота \"household_power_consumption.ipynb\"","provenance":[{"file_id":"1CAESaSRmmyfra8FLgXdQS1a2ak5OHLJP","timestamp":1615530583441}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xOXuNNlK-pZ2","executionInfo":{"status":"ok","timestamp":1615476833127,"user_tz":-180,"elapsed":602,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"9e4fa297-1d44-4c48-dbe5-22990af49075"},"source":["from google.colab import drive\r\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"NismtrZ9-5Qi"},"source":["import pandas as pd\r\n","import numpy as np\r\n","from zipfile import ZipFile\r\n","\r\n","from sklearn.preprocessing import MinMaxScaler, StandardScaler\r\n","\r\n","import torch\r\n","from torch import nn, optim\r\n","from torch.autograd import Variable\r\n","import torch.functional as F\r\n","from torchvision import datasets, transforms\r\n","from torch.utils.data import DataLoader, Dataset\r\n","from torch.utils.data.sampler import SubsetRandomSampler\r\n","\r\n","import random\r\n","\r\n","import time\r\n","import math\r\n","\r\n","import seaborn as sns\r\n","import matplotlib.pyplot as plt\r\n","%matplotlib inline"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KI2jkG4uPiOF"},"source":["import warnings\r\n","warnings.filterwarnings(\"ignore\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"culMRVAS_jRx","executionInfo":{"status":"ok","timestamp":1615476834598,"user_tz":-180,"elapsed":2045,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"38797619-c31c-478d-e5d7-a92620ececb0"},"source":["use_cuda = torch.cuda.is_available()\r\n","# device = torch.device(\"cpu\")\r\n","device = torch.device('cuda') if torch.cuda.is_available() else torch.device('cpu')\r\n","print(device)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["cuda\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ZTlQcC40ZaHk"},"source":["### 1. Загрузка данных"]},{"cell_type":"code","metadata":{"id":"HZihDAHm_s4n"},"source":["PATH = '/content/drive/My Drive/app/PyTorch/Lesson_2_LSTM/'\r\n","TRAIN_DATASET_PATH = PATH + 'household_power_consumption.zip'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":123},"id":"qnRhoVF_A0gR","executionInfo":{"status":"ok","timestamp":1615476837246,"user_tz":-180,"elapsed":4673,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"d352f82f-fe49-4cdf-b794-120b96c2cfeb"},"source":["archive = ZipFile(TRAIN_DATASET_PATH, 'r')\r\n","file = archive.extract('household_power_consumption.txt')\r\n","df = pd.read_csv(file, sep=';', low_memory=False, na_values=['nan','?'])\r\n","df = df[~df['Global_active_power'].isnull()]\r\n","\r\n","print(df.shape)\r\n","df.head(2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(2049280, 9)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Global_active_power</th>\n","      <th>Global_reactive_power</th>\n","      <th>Voltage</th>\n","      <th>Global_intensity</th>\n","      <th>Sub_metering_1</th>\n","      <th>Sub_metering_2</th>\n","      <th>Sub_metering_3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>16/12/2006</td>\n","      <td>17:24:00</td>\n","      <td>4.216</td>\n","      <td>0.418</td>\n","      <td>234.84</td>\n","      <td>18.4</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>16/12/2006</td>\n","      <td>17:25:00</td>\n","      <td>5.360</td>\n","      <td>0.436</td>\n","      <td>233.63</td>\n","      <td>23.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>16.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Date      Time  ...  Sub_metering_2  Sub_metering_3\n","0  16/12/2006  17:24:00  ...             1.0            17.0\n","1  16/12/2006  17:25:00  ...             1.0            16.0\n","\n","[2 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VqBl_YhZZvwp","executionInfo":{"status":"ok","timestamp":1615476837248,"user_tz":-180,"elapsed":4663,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"521ba65c-0b45-40cc-d140-9b63652b65ef"},"source":["df.dtypes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date                      object\n","Time                      object\n","Global_active_power      float64\n","Global_reactive_power    float64\n","Voltage                  float64\n","Global_intensity         float64\n","Sub_metering_1           float64\n","Sub_metering_2           float64\n","Sub_metering_3           float64\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"E2uOa_AObpRU"},"source":["### 2. Препроцессинг данных"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h2J6gd-rjEIn","executionInfo":{"status":"ok","timestamp":1615476842976,"user_tz":-180,"elapsed":10382,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"bea9360d-f9fc-4f6d-b815-7d850a92759b"},"source":["df.Date = pd.to_datetime(df.Date + ' ' + df.Time, infer_datetime_format=True)\r\n","df.drop(['Time'], axis=1, inplace=True)\r\n","\r\n","df = df.set_index('Date')\r\n","\r\n","df.dtypes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Global_active_power      float64\n","Global_reactive_power    float64\n","Voltage                  float64\n","Global_intensity         float64\n","Sub_metering_1           float64\n","Sub_metering_2           float64\n","Sub_metering_3           float64\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":153},"id":"GJPf25OYH3Wn","executionInfo":{"status":"ok","timestamp":1615476842978,"user_tz":-180,"elapsed":10369,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"f0dc9ea9-b1a0-4b28-fdf9-e858065c9dd2"},"source":["start_date = '2009-01-01'\r\n","\r\n","t0 = pd.to_datetime(start_date, infer_datetime_format=True)\r\n","df = df[df.index.get_level_values('Date') > t0]\r\n","\r\n","print(df.shape)\r\n","df.head(2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(978713, 7)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Global_active_power</th>\n","      <th>Global_reactive_power</th>\n","      <th>Voltage</th>\n","      <th>Global_intensity</th>\n","      <th>Sub_metering_1</th>\n","      <th>Sub_metering_2</th>\n","      <th>Sub_metering_3</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2009-01-01 00:01:00</th>\n","      <td>0.484</td>\n","      <td>0.062</td>\n","      <td>247.72</td>\n","      <td>2.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2009-01-01 00:02:00</th>\n","      <td>0.482</td>\n","      <td>0.062</td>\n","      <td>247.75</td>\n","      <td>2.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                     Global_active_power  ...  Sub_metering_3\n","Date                                      ...                \n","2009-01-01 00:01:00                0.484  ...             0.0\n","2009-01-01 00:02:00                0.482  ...             0.0\n","\n","[2 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":284},"id":"CZZruYE6rpMu","executionInfo":{"status":"ok","timestamp":1615476843219,"user_tz":-180,"elapsed":10596,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"e5daf050-b3c0-4b48-caa5-1be6e5c7f848"},"source":["df.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Global_active_power</th>\n","      <th>Global_reactive_power</th>\n","      <th>Voltage</th>\n","      <th>Global_intensity</th>\n","      <th>Sub_metering_1</th>\n","      <th>Sub_metering_2</th>\n","      <th>Sub_metering_3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>978713.000000</td>\n","      <td>978713.000000</td>\n","      <td>978713.000000</td>\n","      <td>978713.000000</td>\n","      <td>978713.000000</td>\n","      <td>978713.000000</td>\n","      <td>978713.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.070395</td>\n","      <td>0.130483</td>\n","      <td>241.717295</td>\n","      <td>4.519228</td>\n","      <td>1.067057</td>\n","      <td>1.119893</td>\n","      <td>7.019616</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.974134</td>\n","      <td>0.116100</td>\n","      <td>2.918508</td>\n","      <td>4.076053</td>\n","      <td>5.979613</td>\n","      <td>5.196193</td>\n","      <td>8.633778</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.122000</td>\n","      <td>0.000000</td>\n","      <td>223.200000</td>\n","      <td>0.400000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.328000</td>\n","      <td>0.052000</td>\n","      <td>239.980000</td>\n","      <td>1.400000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.660000</td>\n","      <td>0.104000</td>\n","      <td>241.700000</td>\n","      <td>2.800000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.514000</td>\n","      <td>0.202000</td>\n","      <td>243.440000</td>\n","      <td>6.200000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>18.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>11.122000</td>\n","      <td>1.240000</td>\n","      <td>254.150000</td>\n","      <td>48.400000</td>\n","      <td>88.000000</td>\n","      <td>80.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       Global_active_power  ...  Sub_metering_3\n","count        978713.000000  ...   978713.000000\n","mean              1.070395  ...        7.019616\n","std               0.974134  ...        8.633778\n","min               0.122000  ...        0.000000\n","25%               0.328000  ...        0.000000\n","50%               0.660000  ...        1.000000\n","75%               1.514000  ...       18.000000\n","max              11.122000  ...       31.000000\n","\n","[8 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"F79Y-OfWsPjz","executionInfo":{"status":"ok","timestamp":1615476845472,"user_tz":-180,"elapsed":12834,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"86d6702c-18b1-4127-eaea-89f1d1f8831e"},"source":["eps = 1e-06\r\n","for col in df.columns:\r\n","  fig, axes = plt.subplots(1, 2)\r\n","  sns.boxplot(x=df[col], width=0.7, ax=axes[0])\r\n","  sns.boxplot(x=np.log(df[col] + eps), width=0.7, ax=axes[1]) \r\n","  plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"qaKdeLGUvmW0"},"source":["df['log_g_active_power'] = np.log(df['Global_active_power'])\r\n","df['log_g_intensity'] = np.log(df['Global_intensity'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0c8oNOUgeZg0"},"source":["target = 'log_g_active_power'"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4nZDs51qZPAZ"},"source":["### 2. Генерация новых признаков"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":240},"id":"ZflUKuMSGtgW","executionInfo":{"status":"ok","timestamp":1615476846265,"user_tz":-180,"elapsed":13598,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"d02ad5b7-3849-4f62-850d-cc088bbba25e"},"source":["df['Year'] = df.index.year\r\n","df['Month'] = df.index.month\r\n","df['Day'] = df.index.day\r\n","df['Qtr'] = df.index.quarter\r\n","df['Weekday'] = df.index.weekday\r\n","df['Week_N'] = df.index.isocalendar().week\r\n","df['Hour'] = df.index.hour\r\n","\r\n","print(df.shape)\r\n","df.head(2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(978713, 16)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Global_active_power</th>\n","      <th>Global_reactive_power</th>\n","      <th>Voltage</th>\n","      <th>Global_intensity</th>\n","      <th>Sub_metering_1</th>\n","      <th>Sub_metering_2</th>\n","      <th>Sub_metering_3</th>\n","      <th>log_g_active_power</th>\n","      <th>log_g_intensity</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","      <th>Qtr</th>\n","      <th>Weekday</th>\n","      <th>Week_N</th>\n","      <th>Hour</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2009-01-01 00:01:00</th>\n","      <td>0.484</td>\n","      <td>0.062</td>\n","      <td>247.72</td>\n","      <td>2.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-0.725670</td>\n","      <td>0.788457</td>\n","      <td>2009</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2009-01-01 00:02:00</th>\n","      <td>0.482</td>\n","      <td>0.062</td>\n","      <td>247.75</td>\n","      <td>2.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-0.729811</td>\n","      <td>0.788457</td>\n","      <td>2009</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                     Global_active_power  Global_reactive_power  ...  Week_N  Hour\n","Date                                                             ...              \n","2009-01-01 00:01:00                0.484                  0.062  ...       1     0\n","2009-01-01 00:02:00                0.482                  0.062  ...       1     0\n","\n","[2 rows x 16 columns]"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":136},"id":"97mzIaXD_0FC","executionInfo":{"status":"ok","timestamp":1615476846270,"user_tz":-180,"elapsed":13588,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"407a9712-8650-4926-c12c-04297c1255ea"},"source":["features = ['Global_reactive_power', 'Voltage', 'log_g_intensity',\r\n","            'Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3', \r\n","            'Year', 'Month', 'Day', 'Qtr', 'Weekday', 'Week_N',\r\n","            'Hour', ]\r\n","       \r\n","df[features].head(2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Global_reactive_power</th>\n","      <th>Voltage</th>\n","      <th>log_g_intensity</th>\n","      <th>Sub_metering_1</th>\n","      <th>Sub_metering_2</th>\n","      <th>Sub_metering_3</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","      <th>Qtr</th>\n","      <th>Weekday</th>\n","      <th>Week_N</th>\n","      <th>Hour</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2009-01-01 00:01:00</th>\n","      <td>0.062</td>\n","      <td>247.72</td>\n","      <td>0.788457</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2009</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2009-01-01 00:02:00</th>\n","      <td>0.062</td>\n","      <td>247.75</td>\n","      <td>0.788457</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2009</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                     Global_reactive_power  Voltage  ...  Week_N  Hour\n","Date                                                 ...              \n","2009-01-01 00:01:00                  0.062   247.72  ...       1     0\n","2009-01-01 00:02:00                  0.062   247.75  ...       1     0\n","\n","[2 rows x 13 columns]"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"JndzfKUrGmCe"},"source":["### 3. train_test_split"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":308},"id":"nQbTgi4JLAUL","executionInfo":{"status":"ok","timestamp":1615476849537,"user_tz":-180,"elapsed":16841,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"54cfa8d3-624c-4239-bf17-c255da7bb87e"},"source":["split_date = '2010-07-01'\r\n","prediction_gap = 30*24*60 \r\n","\r\n","t = pd.to_datetime(split_date, infer_datetime_format=True)\r\n","train = df[df.index.get_level_values('Date') < t]\r\n","test = df[df.index.get_level_values('Date') >= t]\r\n","\r\n","X_train = train.iloc[:-prediction_gap,:][features]    \r\n","X_test = test.iloc[:-prediction_gap,:][features]\r\n","\r\n","y_train = train[target].values[prediction_gap:]\r\n","y_test = test[target].values[prediction_gap:]\r\n","\r\n","\r\n","fig = plt.figure(figsize=(20, 4))\r\n","fig.suptitle(f'{target} - train & test', fontsize=14)\r\n","plt.xlabel('Время')\r\n","plt.ylabel(target)\r\n","plt.plot(train.index, train[target], label='y_train')\r\n","plt.plot(test.index, test[target], label='y_test')\r\n","plt.legend()\r\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"3ah4wHGRIZ4E"},"source":["scaler = StandardScaler()\r\n","scaler.fit(X_train[features[:3]])\r\n","X_train.loc[:, features[:3]] = scaler.transform(X_train[features[:3]])\r\n","X_test.loc[:, features[:3]] = scaler.transform(X_test[features[:3]])\r\n","\r\n","scaler = MinMaxScaler()\r\n","scaler.fit(X_train[features[3:]])\r\n","X_train.loc[:, features[3:]] = scaler.transform(X_train[features[3:]])\r\n","X_test.loc[:, features[3:]] = scaler.transform(X_test[features[3:]])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4DrwJgQh02Bj"},"source":["### 4. Модель"]},{"cell_type":"code","metadata":{"id":"hYjDmvD5o8fL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1615476851876,"user_tz":-180,"elapsed":19162,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"d5f11965-2ecb-4463-9eaa-c09eba77848a"},"source":["input_size = len(features)\r\n","seq_len = 16\r\n","\r\n","hidden_layer_size = 320\r\n","learning_rate = 0.05\r\n","batch_size = 64\r\n","num_epochs = 50\r\n","\r\n","print(input_size)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["13\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pfbjJp-ONaUH"},"source":["class PrepareData(Dataset):\r\n","    def __init__(self, X, y, seq_len, slice_=None):\r\n","        if slice_ == None:\r\n","            self.X = torch.from_numpy((X.values))\r\n","            self.y = torch.from_numpy(y)\r\n","        else:\r\n","            self.X = torch.from_numpy((X.values)[:slice_]).view(-1, seq_len, len(features))\r\n","            self.y = torch.from_numpy(y[:slice_]).view(-1, seq_len, 1)\r\n","\r\n","    def __len__(self):\r\n","        return len(self.y)\r\n","    \r\n","    def __getitem__(self, idx):\r\n","        return self.X[idx], self.y[idx]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BM7a9Xlbz9X3","executionInfo":{"status":"ok","timestamp":1615476851878,"user_tz":-180,"elapsed":19150,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"f3baf675-5347-4b64-b58e-b5bccbb7d51f"},"source":["xv = torch.from_numpy(X_train.values)\r\n","xv.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([733595, 13])"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9EpkTKLk0UQE","executionInfo":{"status":"ok","timestamp":1615476851880,"user_tz":-180,"elapsed":19142,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"f2afd478-3a1a-48c0-d9f1-fdf8ad6dfa12"},"source":["xnan = torch.isnan(xv)\r\n","torch.where(xnan==True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(tensor([], dtype=torch.int64), tensor([], dtype=torch.int64))"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"flxEh9qD0dyX"},"source":["n = 100048      #y_train.shape[0] // seq_len * seq_len\r\n","ds_train = PrepareData(X_train, np.array(y_train), seq_len, n)\r\n","train_set = DataLoader(ds_train, batch_size=batch_size)\r\n","\r\n","n = y_test.shape[0] // seq_len * seq_len\r\n","ds_test = PrepareData(X_test, y_test, seq_len, n)\r\n","test_set = DataLoader(ds_test, batch_size=batch_size)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"08cPHO5G0zXD","executionInfo":{"status":"ok","timestamp":1615476851882,"user_tz":-180,"elapsed":19117,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"e0baf0f2-1778-4e55-9e6e-55a7a57e7781"},"source":["ds_train[0][0].shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([16, 13])"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ca5Ce7tj1v5z","executionInfo":{"status":"ok","timestamp":1615476851883,"user_tz":-180,"elapsed":19110,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"45b32475-dc8a-4081-d662-372147579ed2"},"source":["sample = next(iter(train_set))\r\n","sample[0].shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([64, 16, 13])"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"QoQQxt0BUjxI"},"source":["class RegressionModel(nn.Module):\r\n","\r\n","    def __init__(self, input_dim, hidden_dim, layer_num=1):\r\n","        super(RegressionModel, self).__init__()\r\n","        self.lstm = torch.nn.LSTM(input_dim, hidden_dim,\r\n","                                  layer_num, batch_first=True)\r\n","        self.dropout = nn.Dropout(p=0.2)\r\n","        self.fc = nn.Linear(in_features=hidden_dim, out_features=1)\r\n","\r\n","    def forward(self, X):\r\n","        \r\n","        lstm_out = self.lstm(X)\r\n","        out = self.dropout(lstm_out[0])\r\n","        out = self.fc(out)\r\n","\r\n","        return out"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9eIN0vWYWAmH"},"source":["m = RegressionModel(input_size, hidden_layer_size)\r\n","\r\n","cost_func = nn.MSELoss()\r\n","optimizer = torch.optim.Adam(m.parameters(), lr=learning_rate)\r\n","\r\n","all_losses = []"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BbPaunce4q3b","executionInfo":{"status":"ok","timestamp":1615477135655,"user_tz":-180,"elapsed":302850,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"48feb0d2-2c8d-4771-a175-9a36726c405b"},"source":["for e in range(num_epochs):\r\n","    batch_losses = []\r\n","\r\n","    for ix, (Xb, yb) in enumerate(train_set):\r\n","        \r\n","        _X = Variable(Xb).float()\r\n","        _y = Variable(yb).float()\r\n","\r\n","        #==========Forward pass===============\r\n","\r\n","        preds = m(_X)\r\n","        loss = cost_func(preds, _y)  \r\n","        \r\n","\r\n","        #==========backward pass==============\r\n","\r\n","        optimizer.zero_grad()\r\n","        loss.backward()\r\n","        optimizer.step()              \r\n","\r\n","        batch_losses.append(loss.item()) \r\n","        all_losses.append(loss.item()) \r\n","\r\n","    mbl = np.mean(np.sqrt(batch_losses)).round(3)\r\n","    \r\n","\r\n","    if e % 5 == 0:\r\n","        print(\"Epoch [{}/{}], Batch loss: {}\".format(e, num_epochs, mbl))        \r\n","\r\n","# prepares model for inference when trained with a dropout layer\r\n","print(m.training)\r\n","m.eval()\r\n","print(m.training)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch [0/50], Batch loss: 0.997\n","Epoch [5/50], Batch loss: 0.795\n","Epoch [10/50], Batch loss: 0.785\n","Epoch [15/50], Batch loss: 0.769\n","Epoch [20/50], Batch loss: 0.761\n","Epoch [25/50], Batch loss: 0.759\n","Epoch [30/50], Batch loss: 0.751\n","Epoch [35/50], Batch loss: 0.748\n","Epoch [40/50], Batch loss: 0.748\n","Epoch [45/50], Batch loss: 0.781\n","True\n","False\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"fdyS8d04-rrz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1615477139348,"user_tz":-180,"elapsed":306531,"user":{"displayName":"Yanina Kutovaya","photoUrl":"","userId":"11432719385518429647"}},"outputId":"b83aefb1-5202-4d16-a450-6eddf18423aa"},"source":["test_batch_losses = []\r\n","s = 0\r\n","for _X, _y in test_set:\r\n","\r\n","    _X = Variable(_X).float()\r\n","    _y = Variable(_y).float()\r\n","\r\n","    #apply model\r\n","    test_preds = m(_X)\r\n","    test_loss = cost_func(test_preds, _y)\r\n","\r\n","    if s == 0:\r\n","      test_preds_all = test_preds\r\n","      s += 1\r\n","    else:\r\n","      test_preds_all = torch.cat((test_preds_all, test_preds), 0)\r\n","\r\n","    test_batch_losses.append(test_loss.item())\r\n","\r\n","losses_ = np.array(test_batch_losses)\r\n","print(f'Mean test batch losses = {round(losses_ .mean(), 3)} +- {round(losses_ .std(), 3)}')\r\n","\r\n","# Предсказание\r\n","test_preds_all = test_preds_all.data.numpy().flatten()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mean test batch losses = 1.271 +- 0.561\n"],"name":"stdout"}]}]}